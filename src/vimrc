" set up pathogen
call pathogen#runtime_append_all_bundles()
call pathogen#helptags()

" general
set nocompatible " enable lots of cool vim-only features
syntax enable " enable syntax highlighting
set encoding=utf-8 " default encoding
set showcmd " display incomplete commands
filetype plugin indent on " load file type plugins and indentation
set showmatch " highlight the matching {("/")}
set backupdir=~/.vim/_backup " specify location for backup files
set directory=~/.vim/_swp " specify location for swp files
set relativenumber " relative line numbers; if you care about aboslute, look at the status bar
set cursorline " highlight the current line
" set autoindent " perform auto-indentation
set shiftround " round to the nearest tabstop when tabbing
set scrolloff=3 " start scrolling within 3 lines of the edge of the window
set title " show a window title, even in command-line vim
set visualbell " eliminate audio bells
set hidden " allow an unsaved buffer to become hidden (no longer the visible), and load its marks and undo history upon becoming visible again
set history=1000 " store command history FOREVER

" whitespace settings
set nowrap " don't wrap lines
set tabstop=2 shiftwidth=2 softtabstop=2 " 2 spaces for tabs
set expandtab " use spaces, not tabs
set backspace=indent,eol,start " backspace through everything
set list " display whitespace characters
set listchars=tab:\ \ ,trail:Â· " tabs, spaces, trailing whitespace

" searching
set hlsearch " highlight matches
set incsearch " search incrementally
set ignorecase " case-insensitive search
set smartcase " unless there's a capital later

" status bar
set ruler " enable status bar at the bottom
set laststatus=2 " Status bar
" eliminate some extraneous garbage from messages
" a to truncate text as much as possible
" t to eliminate long file names
" I to skip vim's intro message
set shortmess=atI

" Tab completion
set wildmenu " enable tab completion
set wildmode=list:longest,list:full " promiscuous selection of available completions
set wildignore+=*.o,*.obj,.git,*.rbc,*.class,.svn " ignore these files for completion
set wildignore+=*.png,*.jpg,*.gif,*.ico,*.swf,*.psd,*.gem " and these binaries, too. mainly for command-t
set wildignore+=_site,cache,tmp " and auto-generated files

" window splitting settings
set splitbelow
set splitright

" Default color scheme
let g:solarized_contrast="high"    "default value is normal
let g:solarized_visibility="high"    "default value is normal
let g:solarized_hitrail=1    "default value is 0
set background=dark
colorscheme Tomorrow-Night

" Undo settings, if available
if has("persistent_undo")
  set undodir=~/.vim/_undo " specify location of undo files

  set undofile " persistent undo, even after closing and saving
  set undolevels=1000 "maximum number of changes that can be undone
  set undoreload=10000 "maximum number lines to save for undo on a buffer reload
endif

" MacVIM shift+arrow-keys behavior (required in .vimrc)
let macvim_hig_shift_movement = 1

" % to bounce from do to end etc.
" also necessary for textobj-rubyblock
runtime! macros/matchit.vim

" force you to Do The Right Thing (don't use arrows to move)
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Custom shortcuts
" use sane (not the vim-default) regexes in search
nnoremap / /\v
" use sane (not the vim-default) regexes in search
vnoremap / /\v
" clear the search term
nnoremap <leader><space> :noh<cr>
" close windows other than the current
map <Leader>w :ZoomWin<CR>
" reselect the just-pasted text
nnoremap <leader>v V`]
" awesome buffer switching
nnoremap <C-j> :bp<CR>
nnoremap <C-k> :bn<CR>
" shortcuts for beginning and end of the line
nnoremap H ^
nnoremap L $
" jj to escape insert mode
inoremap jj <ESC>

" automatically strip whitespace from ends of ruby and ERB files
"autocmd BufWritePre *.rb,*.erb :%s/\s\+$//e
nmap <Leader>WS :%s/\s\+$//e<CR>
imap <Leader>WS :%s/\s\+$//e<CR>

if $VIM_CRONTAB == "true"
set nobackup " don't back up, causes issues editing crontabs
set nowritebackup " disabling other backup feature
syntax off " my colorscheme's syntax highlighting in crontab is redongculous
endif

set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%y\ %-14.(%l,%c%V%)\ %P

" Command-T settings
let g:CommandTMaxHeight=20 " max height of list of matches
let g:CommandTMaxFiles=100000 " Increase Max Files in Command-T List (from default of 10,000)

" Unimpaired shortcuts
" Bubble single lines
nmap <C-Up> [e
nmap <C-Down> ]e
" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

" CTags shortcuts
map <Leader>rt :!ctags --extra=+f -R *<CR><CR>
" open definition in a new tab
map <C-\> :sp <CR>:exec("tag ".expand("<cword>"))<CR>

" Create the tag on multiple lines: e.g.
" <p>
"   |
" </p>
" instead of
" <p>|</p>
imap <Leader>e <C-e><CR><ESC>O

if has("autocmd")
  " Remember last location in file
  autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal g'\"" | endif

  " maps .. to move up a directory when in Fugitive's Gedit view on a folder
  autocmd User fugitive
    \ if fugitive#buffer().type() =~# '^\%(tree\|blob\)$' |
    \   nnoremap <buffer> .. :edit %:h<CR> |
    \ endif

  " delete a Gedit view from the buffer list when leaving it
  autocmd BufReadPost fugitive://* set bufhidden=delete

  " exit out of vimdiff mode from a fugitive diff, ugly and hacky but it works
  " from http://stackoverflow.com/questions/2703644/how-do-you-exit-vimdiff-mode-in-vim
  function! MyCloseDiff()
    if (&diff == 0 || getbufvar('#', '&diff') == 0)
          \ && (bufname('%') !~ '^fugitive:' && bufname('#') !~ '^fugitive:')
      echom "Not in diff view."
      return
    endif

    " close current buffer if alternate is not fugitive but current one is
    if bufname('#') !~ '^fugitive:' && bufname('%') =~ '^fugitive:'
      if bufwinnr("#") == -1
        b #
        bd #
      else
        bd
      endif
    else
      bd #
    endif
  endfunction
  nnoremap <Leader>gD :call MyCloseDiff()<cr>
  
  " make uses real tabs
  autocmd FileType make set noexpandtab
  
  " Thorfile, Rakefile, Vagrantfile and Gemfile are Ruby
  autocmd BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru,*.term,Guardfile}    set ft=ruby
  
  " *.md are markdown
  autocmd BufRead,BufNewFile *.md set ft=markdown
  
  " json is really just javascript
  autocmd BufNewFile,BufRead *.json set ft=javascript
  
  " clean up quickfix (e.g., Ack) output
  autocmd Filetype qf setlocal colorcolumn=0 nolist nocursorline nowrap
  
  " make python follow PEP8 ( http://www.python.org/dev/peps/pep-0008/ )
  autocmd FileType python  set tabstop=4 textwidth=79
  
  " automatically leave insert mode after 15 seconds of inactivity
  autocmd CursorHoldI * stopinsert
  autocmd InsertEnter * let updaterestore=&updatetime | set updatetime=15000
  autocmd InsertLeave * let &updatetime=updaterestore
endif
