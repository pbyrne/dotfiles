#!/bin/bash

set -e

PRIVATE_DOTFILES="${HOME}/Library/Mobile Documents/com~apple~CloudDocs/dotfiles/symlinks"

function main() {
  symlink_bin
  symlink_public_dotfiles "src"
  symlink_private_dotfiles "$PRIVATE_DOTFILES"
}

function conditionally_symlink() {
  local src=$1
  local expanded_src=$(readlink -f "$src")
  local dest=$2

  echo "Linking ${expanded_src} (from ${src}) to ${dest}…"
  if [[ ! -e $expanded_src ]]
  then
    echo "  $src doesn't exist. Skipping."
  elif [[ -L $dest ]] && [[ $expanded_src = $(readlink $dest) ]]
  then
    echo "  $dest already symlinked. Nothing to do."
  elif [[ -L $dest ]]
  then
    echo "  Relinking $dest from $(readlink $dest) to $src"
    rm $dest
    ln -s "$expanded_src" $dest
  elif [[ -e $dest ]]
  then
    local backup="$dest-$(date +'%Y-%m-%d')"
    echo "  $dest already exists. Backing up to $backup."
    mv $dest $backup
    ln -s "$expanded_src" $dest
  else
    echo "  Creating symlink for $dest"
    ln -s "$expanded_src" $dest
  fi
}

function symlink_bin() {
  echo Symlinking bin/

  conditionally_symlink src/bin/ ~/bin
}

function symlink_public_dotfiles() {
  local src_path="$1"
  echo Symlinking public dotfiles from $src_path

  for src in $(ls "$src_path"); do
    dest="${HOME}/.$(basename $src)"
    conditionally_symlink "$src_path/$src" "$dest"
  done
}

# NOTE: Defined function with ( … ) instead of { … } to not change working directory of script
function symlink_private_dotfiles() (
  local src_path="$1"
  echo Symlinking private dotfiles from $src_path

  cd "$src_path"
  make
)

main
